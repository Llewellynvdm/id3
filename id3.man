.TH ID3 1 "id3 mass tagger"
.SH NAME
id3 \- a commandline mass tagger
.SH SYNOPSIS
.HP 2
.B id3
.RB [ \-v ]
.RB [ \-12 ]
.RB [ \-d ]
.RB [ \-t
.IR title ]
.RB [ \-a
.IR artist ]
.RB [ \-g
.IR genre ]
.br
.RB [ \-n
.IR tracknr ]
.RB [ \-l
.IR album ]
.RB [ \-y
.IR year ]
.RB [ \-c
.IR comment ]
.br
.RB [ \-! ]
.RB [ \-s
.IR size ]
.RB [ \-r\fIFRAME ]
.RB [ \-w\fIFRAME
.IR data ]
.br
.RB [ \-q
.IR string ]
.RB [ \-f
.IR filename ]
.RI [ " \*(lqfilespec\*(rq
\& ... ]
.SH DESCRIPTION
id3 is a mass tagger for audio files. This means it is intended to be used for
non-interactively performing operations on the meta-data in a number of files
with just a single command.

Operations performed might consist of replacing certain fields, or adding,
replacing, or removing all meta-data present in an audio file.

To take advantage of this, it has the ability to use portions of the
filenames to fill in portions of the tag.

id3 currently supports the old-style ID3 format with track-number extension
(ID3 v1.1), as well as the more complicated ID3v2 (ID3 v2.3.0) format. This
also means use is pretty much limited to audio files which use these formats,
e.g, MPEG-1 Layer III.
.SH OPTIONS
Order of the options is only important where specified.
.TP
.B filespec ...
specifies the file(s) to be affected by the command.

If you use wildcards, it is recommended to enclose the specification in double
quotes (""). id3 has internal shell pattern matching which will not work if
your shell performs this function.

The shell pattern matching can be applied to both filenames and directory
names.
.TP
.B \-h
show commandline help
.TP
.B \-V
display version number and copyright
.TP
.B \-v
be verbose
.TP
.B \-1
process ID3v1 tags (default). See `-2'.
.TP
.B \-2
process ID3v2 tags. If both -1 and -2 are specified, both tag formats will be
written.
.TP
.B \-d
do not re-use existing tag data. If no new tag information is specified in
conjunction with this, all selected tags will be removed.
.PP
.BI \-t " title
.br
.BI \-a " artist
.br
.BI \-l " album
.br
.BI \-n " tracknr
.br
.BI \-y " year
.br
.BI \-c " comment
.br
.BI \-g " genre
.IP
add/replace  the  specified  fields  in all selected tags with the values
given. Field values are scanned for substitution commands, see
.B SUBSTITUTION
below.

Genres can be specified either directly or with their assigned number,
regardless of tag format.
.TP
.BI \-q " format
for each file encountered, \fIformat\fR will get scanned for substitution
commands, and written to standard output.
.TP
.BI \-f " filename-template
rename files encountered according to \fIfilename-template\fR.
The argument is scanned for substitution commands, and empty variables will
by default get replaced with the string \*(lqUnknown\*(rq. Trying to rename
to an already existing file will cause an error.
.PP
The  following  options  only  operate  on  the  last tag format selected on
the command line, and only have meaning where relevant.
.TP
.BI \-!
fill all standard tag fields with information from the source tag. This is
similar to writing \*(lq-talnygc %t %a %l %n %y %g %c\*(rq, but only operates
on the last tag. It is possible for the source and destination tag to be the
same.
.TP
.BI \-s " size
try to write a new tag using exactly \fIsize\fR bytes, adding / removing
padding as necessary.
.TP
.B \-r\fIFRAME
remove all occurrences of frames named \fIFRAME\fR from the  tag. Consult the
format documentation for valid \fIFRAME\fR names.
.TP
.BI \-w\fIFRAME " data
add / update  a frame named \fIFRAME\fR with \fIdata\fR in the  tag.  Again,
consult the format documentation. See \fICOMPATIBILITY\fR for more
information.
.PP
Individual options can be stacked in a single argument for more convenience.
For example, running

   id3 -2 -dalt "Artist" "Album" "Title" *.mp3

is equivalent to:

   id3 -2 -d -a "Artist" -l "Album" -t "Title" *.mp3
.SH SUBSTITUTION
id3 can perform \*(lqprintf-like\*(rq substitution on the values prior to
writing them to a tag. Note that if you want to use pattern matching, you
HAVE TO enclose the wildcard specification on the commandline in double quotes
to prevent your shell from expanding any wildcards.
.TP
.BI % <modifiers>N
.SM where \fIN\fR <- [0..9]

replaced with the portion of the filename matching the \fIn\fRth \*(lq*\*(rq
wildcard in the file specification. 0 is taken to mean 10.
.TP
.BI % <modifiers>c
.SM where \fIc\fR <- [a..z]
.RS
replaced by values according to the following table:
.PP
.BR %t " title
.br
.BR %a " artist
.br
.BR %g " genre
.br
.BR %n " track\ number
.br
.BR %l " album\ title
.br
.BR %y " year
.br
.BR %c " comment\ field
.br
.BR %f " filename
.br
.BR %x " auto-increasing\ counter
.PP
All values get read (where applicable) from the source tag, which is specified
by the left-most specified tag format on the command line, and reflect the
state of the file before any modifications were made. Similarly, \fI%f\fR is
always the original filename. The \fI%x\fR value gets increased each time it
is substituted, and is intended to be used for auto-numbering.
.RE
.TP
.B %%
replaced with a single \*(lq%\*(rq
.TP
.B %,
replaced with the newline (\*(lq\en\*(rq) character
.SS Available \fI<modifiers>\fR (optional):
.TP
.BR + " (plus\ sign)
Capitalize the substituted value
.TP
.BR - " (minus\ sign)
Convert all characters to lowercase
.TP
.BR _ " (underscore)
Do not replace underscores with spaces, and do not compress empty space.
.TP
.BR # " (hash\ or\ pound\ sign)
Prefix a zero before the substituted value to pad it out, if necessary.
Multiple hash signs can be stacked for more padding. Intended for numeric
fields only.
.TP
.BI | fallback |
If substitution would yield an empty value, substitute with \fIfallback\fR
instead. \fIfallback\fR itself may contain other substitutions, but no other
.B |
(pipe) symbols or fallbacks.
.RE
.SH EXAMPLES
Here are some examples of using id3:
.TP
\fBid3 -a "Stallman" -t "Free Software Song" fs_song.mp3"
Add a simple tag to a file.
.TP
\fBid3 -d *.mp3
Removes all ID3v1 tags from all mp3's.
.TP
\fBid3 -2 -1! fs_song.mp3
Copy ID3v2 tag to ID3v1 tag in selected file.
.TP
\fBid3 -a "TAFKAT" -n "%1" -t "%c2" "*. *.mp3"
Sets tag fields correspondingly:
  01. my_song.mp3  [=>] "01" "My Song"
  02. untitled.mp3 [=>] "02" "Untitled"    etc..
.TP
\fBid3 -2 -f "%a - %t.mp3" blaet.mp3
Rename file to a standard format, using ID3v2 values.
.TP
\fBid3 -2 -rAPIC -s 0 *.mp3
Removes embedded images and padding from all mp3's.
.TP
\fBid3 -2 -!d *.mp3
Rewrite ID3v2 tag, removing spaces, keeping only the basic fields.
.TP
\fBid3 -2 -wUSLT "foo, bar%,lalala!%," blaet.mp3
Adds an ID3v2 lyric frame to blaet.mp3.
.TP
\fBid3 -v -g alt-rock -alnt "The Author" %1 %2 %3 "Author - */(*) *.mp3"
Process multiple directories at once.
.TP
\fbid3 -1 -2! -c "Was: %f" -f "%|TAFKAT|a - %|Untitled (%x)|t.mp3" "*.mp3"
More advanced rename. Save previous filename in the comment field, and copies ID3v1 to ID3v2.
.SH NOTES
The internal pattern matching emulates the normal pattern matching of
\*(lqsh\*(rq. It supports ?, * and [].

A shell pattern will never match a forward slash (\*(lq/\*(rq) or a dot
(\*(lq.\*(rq) beginning a filename. Wildcards can be used for directories as
well (to arbitrary depths), in which case a search will be performed.

In an ambiguous situation, the pattern matcher will always resolve a
\*(lq*\*(rq wildcard to the shortest possible sequence of tokens. This differs
from the standard behavior of regular expressions, however it tends to make
sense in the context of filenames.

Do NOT add ID3 tags to files for which it does not make sense, i.e, add them
only to MP3 files. In particular, do not add ID3v2 tags to Ogg files, since
ID3v2 tags start at the beginning of the file, thereby resulting in corrupted
Ogg files.
.SH COMPATIBILITY
id3 has a built-in genre list of 148 genres. If you pass the -g parameter a
string instead of a number when using ID3v1, id3 tries to find the specified
genre in this list, and selects the closest possible match (if any). For the
genre numbers and exact spelling, see \fIid3v1.c\fR in the source
distribution. An empty or invalid genre is assigned the number 0.

The  -w\fIFRAME\fR  parameter  only  knows  the following ID3v2 frames:  Txxx
(text), Wxxx (links), COMM (comment), IPLS (involved  people),  USLT (lyrics),
USER (tos) and PCNT (numeric play counter). It is a no-op for ID3v1.

id3 does not support ID3v2 v2.0 or earlier, neither does it support the new
ID3v2 v4.0 (yet?). It also does not support ID3v2 features as compression,
encryption, ...
.SH AUTHOR
Written by Marc R. Schoolderman <squell@alumina.nl>.
.SH COPYRIGHT
This is free software; see the source for copying conditions. There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
.SH SEE ALSO
Program homepage: http://home.wanadoo.nl/squell/id3.html

